{
    "swagger": "2.0",
    "info": {
        "description": "Music Stram descritption",
        "version": "1.0.0",
        "title": "Music Stream",
        "termsOfService": "",
        "contact": {
            "email": "musicstream@gmail.com"
        }
    },
    "host": "",
    "basePath": "/",
    "tags": [
        {
            "name": "Auth",
            "description": "Operations about create user/artist, login, forget password",
            "externalDocs": {
                "description": "Find out more about MusicStream",
                "url": "http://testchef.bytecodetechnologies.co.in"
            }
        },
        {
            "name": "User",
            "description": "Operations about get user/artist, edit, delete",
            "externalDocs": {
                "description": "Find out more",
                "url": "http://testchef.bytecodetechnologies.co.in"
            }
        },
        {
            "name": "Song",
            "description": "Operations about get, insert, edit, delete songs(mp3/videos)"
        },
        {
            "name": "Approval",
            "description": "Operations about Approval artist"
        },
        {
            "name": "Wishlist",
            "description": "Operations about wishlist"
        },
        {
            "name": "Liking",
            "description": "Operations about like-dislike"
        },
        {
            "name": "Comments",
            "description": "Operations about comments"
        },
        {
            "name": "Booking",
            "description": "Operations about booking"
        }
       
    ],
    "schemes": [
        "http",
        "https"
    ],
    "paths": {  
        "/filePost": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "upload profile Image",
                "description": "User can upload his profile image, Copy responded image path and paste into 'image' parameter of 'signUp' endpoint",
                "operationId": "uploadImage",
                "consumes": [
                    "multipart/form-data"
                ],
                "parameters": [
                    {
                        "name": "image",
                        "in": "formData",
                        "description": "file to upload",
                        "required": true,
                        "type": "file"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "responsed json Array",
                        "schema": {
                           "type": "object",
                            "properties": {
                                "filePath": {
                                    "type": "string"
                                },
                                "success": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Fail to upload"
                    }
                }
            }
        },
        "/signup": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Create user",
                "description": "Any new user can register.",
                "operationId": "createUser",
                "produces": [                    
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "in": "formData",
                        "name": "name",
                        "description": "",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "formData",
                        "name": "password",
                        "description": "",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "formData",
                        "name": "email",
                        "description": "",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "formData",
                        "name": "type",
                        "description": "type-2 for user",
                        "required": true,
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "enum": [2],
                            "default": 2
                        }                       
                    },
                    {
                        "in": "formData",
                        "name": "image",
                        "description": "",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "formData",
                        "name": "status",
                        "description": "status 1 active(aprroved), 2 not approved(in-actve)",
                        "required": true,
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "enum": [
                                1,
                                2
                            ],
                            "default": 2
                        }
                    },
                    {
                        "in": "formData",
                        "name": "phone_no",
                        "description": "",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "formData",
                        "name": "description",
                        "description": "",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Successfully created user, responsed json Array",
                        "schema": {
                            "$ref": "#/definitions/User"
                        }
                    },
                    "400": {
                        "description": "Fail to create user"
                    },
                    "409": {
                        "description": "Duplicate entry"
                    }
                }
            }
        },     
        "/login": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "User login",
                "description": "",
                "operationId": "login",
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "in": "formData",
                        "name": "userName",
                        "description": "UserName",
                        "required": true,
                        "type":"string"
                    },
                    {
                        "in": "formData",
                        "name": "password",
                        "description": "Password",
                        "required": true,
                        "type":"string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "responsed json Array of user",
                        "schema": {
                            "$ref": "#/definitions/User"
                        }
                    },
                    "401": {
                        "description": "Invalid user password"
                    }
                }
            }
        },  
        "/forgetPassword": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Recover user password by email",
                "description": "",
                "operationId": "forgetPassword",
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "in": "formData",
                        "name": "email",
                        "description": "",
                        "required": true,
                        "type": "string"                        
                    }
                ],
                "responses": {
                    "200": {
                        "description": "responsed json array of user",
                        "schema": {
                            "$ref": "#/definitions/User"
                        }
                    },
                    "400": {
                        "description": "Email not registered"
                    }
                }
            }
        },
        "/createartist": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Create Artist",
                "description": "Only artist can register",
                "operationId": "createArtist",
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "in": "formData",
                        "name": "name",
                        "description": "",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "formData",
                        "name": "email",
                        "description": "",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "formData",
                        "name": "type",
                        "description": "Type-2 for artist",
                        "required": true,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "enum": [
                                2
                            ],
                            "default": 2
                        }
                    },
                    {
                        "in": "formData",
                        "name": "image",
                        "description": "",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "formData",
                        "name": "status",
                        "description": "Status 1(acitve/approved), Status 2(in-active/not approved)",
                        "required": true,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "enum": [
                                1,
                                2
                            ],
                            "default": 2
                        }
                    },
                    {
                        "in": "formData",
                        "name": "phone_no",
                        "description": "",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "formData",
                        "name": "description",
                        "description": "",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "201": {       
                        "description": "Successfully created artist, responsed json Array",                     
                        "schema": {
                            "$ref": "#/definitions/Artist"
                        }
                    },
                    "400": {
                        "description": "Fail to create Artist"
                    },
                    "409": {
                        "description": "Duplicate entry"
                    }
                }
            }
        }, 
        "/editProfilebyAdmin": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Update user profile by admin",
                "description": "Edit user profile by admin",
                "operationId": "editProfilebyAdmin",
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "in": "formData",
                        "name": "artistId",
                        "description": "",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "formData",
                        "name": "name",
                        "description": "",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "formData",
                        "name": "password",
                        "description": "",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "formData",
                        "name": "email",
                        "description": "",
                        "required": true,
                        "type": "string"
                    },                           
                    {
                        "in": "formData",
                        "name": "phone_no",
                        "description": "",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "formData",
                        "name": "description",
                        "description": "",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "formData",
                        "name": "userName",
                        "description": "",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully update record, responsed json Array"
                    },
                    "400": {
                        "description": "Fail to update record, responsed json Array"
                    }
                }
            }
        },     
        
        "/user": {
            "get": {
                "tags": [
                    "User"
                ],
                "summary": "Get all users",
                "description": "",
                "operationId": "getAllUser",
                "produces": [                    
                    "application/json",
                    "application/xml"
                ],                
                "responses": {
                    "200": {
                        "description": "Success, responsed json Array",
                        "schema": {
                            "$ref": "#/definitions/User"
                        }
                    },
                    "400": {
                        "description": "Fail to retreive record"
                    }
                }
            }
        },
        "/profile": {
            "post": {
                "tags": [
                    "User"
                ],
                "summary": "Get single user/artist detail, passing Id",
                "description": "",
                "operationId": "getProfileByID",
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "in": "formData",
                        "name": "id",
                        "description": "Profile id",
                        "required": true,
                        "type":"integer",
                        "schema": {
                            "properties":{
                                "id": {
                                    "type": "integer",
                                    "required": true
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully get record, responsed json Array",
                        "schema": {
                            "$ref": "#/definitions/User"
                        }
                    },
                    "400": {
                        "description": "Fail to get record"
                    }
                }
            }
        },
        "/editProfile": {
            "post": {
                "tags": [
                    "User"
                ],
                "summary": "Update user/artist, based on Id and userType",
                "description": "usertype 2 - update user, userType-3 update artist",
                "operationId": "updateRecord",
                "produces": [
                    "application/json",
                    "application/xml"
                ],
               "parameters": [
                   {
                        "in": "formData",
                        "name": "id",
                        "description": "",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "formData",
                        "name": "name",
                        "description": "",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "formData",
                        "name": "password",
                        "description": "",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "formData",
                        "name": "email",
                        "description": "",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "formData",
                        "name": "type",
                        "description": "2- for user, 3- for artist",
                        "required": true,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "enum": [2,3],
                            "default": 2
                        }
                    },
                    {
                        "in": "formData",
                        "name": "image",
                        "description": "",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "formData",
                        "name": "status",
                        "description": "1- apprvoed, 2- not approved",
                        "required": true,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "enum": [1,2],
                            "default": 2
                        }
                    },
                    {
                        "in": "formData",
                        "name": "phone_no",
                        "description": "",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "formData",
                        "name": "description",
                        "description": "",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "formData",
                        "name": "userName",
                        "description": "",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully update record, responsed json Array",
                        "schema": {                           
                            "$ref": "#/definitions/User"
                        }
                    },
                    "400": {
                        "description": "Fail to update record"
                    }
                }
            }
        },
        "/delProfile": {
            "post": {
                "tags": [
                    "User"
                ],
                "summary": "Delete record, based on Id",
                "description": "",
                "operationId": "deleteRecord",
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "in": "formData",
                        "name": "id",
                        "description": "Profile id",
                        "required": true,
                        "type": "integer"                        
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Succesfully removed record"
                    },
                    "400": {
                        "description": "Fail to delete record"
                    }
                }
            }
        },        
        "/allUserType2": {
            "get": {
                "tags": [
                    "User"
                ],
                "summary": "get all user having type 2 (mean not artist/admin, only users)",
                "description": "",
                "operationId": "getAllUserType2",
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "responses": {
                    "200": {
                        "description": "Success, responsed json Array",
                        "schema": {
                            "$ref": "#/definitions/User"
                        }
                    },
                    "400": {
                        "description": "Fail to retreive record"
                    }
                }
            }
        },
        "/insertCheckValue": {
            "post": {
                "tags": [
                    "User"
                ],
                "summary": "Add check value",
                "description": "",
                "operationId": "insertCheckValue",
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "in": "formData",
                        "name": "id",
                        "description": "",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "formData",
                        "name": "checkValue",
                        "description": "check value 0/1",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Inserted"
                    },
                    "400": {
                        "description": "Not inserted"
                    }
                }
            }
        },
        "/insertArtistLike": {
            "post": {
                "tags": [
                    "User"
                ],
                "summary": "If user and media exist in Liking then update like value else insert like value",
                "description": "",
                "operationId": "insertArtistLike",
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "in": "formData",
                        "name": "userId",
                        "description": "",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "formData",
                        "name": "artistId",
                        "description": "",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "formData",
                        "name": "like",
                        "description": "",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Yes/No"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },

        "/songsPost": {
            "post": {
                "tags": [
                    "Song"
                ],
                "summary": "upload song",
                "description": "Upload song, Copy responded path and paste into 'filePath' parameter of 'songInsert' endpoint",
                "operationId": "uploadSong",
                "consumes": [
                    "multipart/form-data"
                ],
                "parameters": [
                    {
                        "name": "song",
                        "in": "formData",
                        "description": "file to upload",
                        "required": true,
                        "type": "file"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "responsed json Array",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "filePath": {
                                    "type": "string"
                                },
                                "success": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Fail to upload"
                    }
                }
            }
        },
        "/songsThumbImagePost": {
            "post": {
                "tags": [
                    "Song"
                ],
                "summary": "upload song Image",
                "description": "Upload song image, Copy responded image path and paste into 'thumbnailPath' parameter of 'songInsert' endpoint",
                "operationId": "uploadImage",
                "consumes": [
                    "multipart/form-data"
                ],
                "parameters": [
                    {
                        "name": "image",
                        "in": "formData",
                        "description": "file to upload",
                        "required": true,
                        "type": "file"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "responsed json Array",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "filePath": {
                                    "type": "string"
                                },
                                "success": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Fail to upload"
                    }
                }
            }
        },
        "/songInsert": {
            "post": {
                "tags": [
                    "Song"
                ],
                "summary": "Insert song",
                "description": "Insert artist songs based on artist Id",
                "operationId": "insertSong",
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "in": "formData",
                        "name": "name",
                        "description": "",
                        "required": true,
                        "type":"string"
                    },
                    {
                        "in": "formData",
                        "name": "artistId",
                        "description": "",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "formData",
                        "name": "type",
                        "description": "1 audio song, 2 video song",
                        "required":true,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "enum": [
                                1,
                                2
                            ],
                            "default": 1
                        }
                    },
                    {
                        "in": "formData",
                        "name": "filePath",
                        "description": "",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "formData",
                        "name": "thumbnailPath",
                        "description": "",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Successfully inserted record, responsed json Array",
                        "schema": {
                            "$ref": "#/definitions/Song"
                        }
                    },
                    "400": {
                        "description": "Fail to insert record"
                    } 
                }
            }
        },        
        "/delMediaArtIdMedId": {
            "post": {
                "tags": [
                    "Song"
                ],
                "summary": "Delete song, based on MediaId, ArtistId",
                "description": "",
                "operationId": "deleteRecord",
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    { 
                        "in": "formData",
                        "name": "tblMedia_Id",
                        "description": "Pass MediaId",                              
                        "type": "integer",
                        "required": true
                    },
                    {
                        "in": "formData",
                        "name": "artistId",
                        "description": "Pass  ArtistId",
                        "type": "integer",
                        "required": true
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Succesfully removed record"
                    },
                    "400": {
                        "description": "Fail to delete record"
                    }
                }
            }
        },
        "/allSongsArtist": {
            "get": {
                "tags": [
                    "Song"
                ],
                "summary": "Get all audio song",
                "description": "Return all audio songs with artist Name
                "operationId": "getAllAudioSong",
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "responses": {
                    "200": {
                        "description": "Success, responsed json Array",
                        "schema": {
                            "$ref": "#/definitions/Song"
                        }
                    },
                    "400": {
                        "description": "Fail to retreive record"
                    }
                }
            }
        },
        "/allVideosArtist": {
            "get": {
                "tags": [
                    "Song"
                ],
                "summary": "Get all video song",
                "description": "Return all video songs with artist Name
                "operationId": "getAllVideoSong",
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "responses": {
                    "200": {
                        "description": "Success, responsed json Array",
                        "schema": {
                            "$ref": "#/definitions/Song"
                        }
                    },
                    "400": {
                        "description": "Fail to retreive record"
                    }
                }
            }
        },
        "/singleSongsArtist": {
            "post": {
                "tags": [
                    "Song"
                ],
                "summary": "Get all audio song, passing artist id",
                "description": "Return all audio songs with artist name by passing artist id
                "operationId": "getSingleSong",
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "in": "formData",
                        "name": "artistId",
                        "description": "",
                        "required": true,
                        "type": "integer"                        
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success, responsed json Array",
                        "schema": {
                            "$ref": "#/definitions/Song"
                        }
                    },
                    "400": {
                        "description": "Fail to retreive record"
                    }
                }
            }
        },
        "/allVideosWithArtistId": {
            "post": {
                "tags": [
                    "Song"
                ],
                "summary": "Get all video song, pass artist id",
                "description": "Return all video songs with artist name by passing artist id
                "operationId": "allVideosWithArtistId",
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "in": "formData",
                        "name": "artistId",
                        "description": "Pass artist id",
                        "required": true,
                        "type": "integer"                        
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success, responsed json Array",
                        "schema": {
                            "$ref": "#/definitions/Song"
                        }
                    },
                    "400": {
                        "description": "Fail to retreive record"
                    }
                }
            }
        },
        "/allArtist": {
            "get": {
                "tags": [
                    "Song"
                ],
                "summary": "Get all artist with thier number of songs ",
                "description": "Return all artist with thier number of songs                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               ",
                "operationId": "allArtist",
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "responses": {
                    "200": {
                        "description": "Success, responsed json Array",
                        "schema": {
                            "$ref": "#/definitions/Song"
                        }
                    },
                    "400": {
                        "description": "Fail to retreive record"
                    }
                }
            }
        },
        "/countMediaArtId": {
            "post": {
                "tags": [
                    "Song"
                ],
                "summary": "count video and audio song, pass artist id",
                "description": "Return count of video and audio songs for particular artist ",
                "operationId": "countMedia",
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                   {
                        "in": "formData",
                        "name": "artistId",
                        "description": "Pass artist id",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success, responsed json Array",
                        "schema": {
                            "$ref": "#/definitions/Song"
                        }
                    },
                    "400": {
                        "description": "Fail to retreive record"
                    }
                }
            }
        },

        "/allApprovedArtist": {
            "get": {
                "tags": [
                    "Approval"
                ],
                "summary": "Get all approved artist",
                "description": "Return all aprpoved artist",
                "operationId": "allApprovedArtist",
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "responses": {
                    "200": {
                        "description": "Success, responsed json Array",
                        "schema": {
                            "$ref": "#/definitions/Artist"
                        }
                    },
                    "400": {
                        "description": "Fail to retreive record"
                    }
                }
            }
        },
        "/allPendingArtist": {
            "get": {
                "tags": [
                    "Approval"
                ],
                "summary": "Get all pending artist from approval",
                "description": "Return all pending artist from approval",
                "operationId": "allPendingArtist",
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "responses": {
                    "200": {
                        "description": "Success, responsed json Array",
                        "schema": {
                            "$ref": "#/definitions/Artist"
                        }
                    },
                    "400": {
                        "description": "Fail to retreive record"
                    }
                }
            }
        },
        "/approveToArtist": {
            "post": {
                "tags": [
                    "Approval"
                ],
                "summary": "Give approval to artist, by admin",
                "description": "Give approval to artist by updating username and passord to the artist, process will be done by admin only",
                "operationId": "approveToArtist",
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "in": "formData",
                        "name": "artistId",
                        "description": "Artist id",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "formData",
                        "name": "userName",
                        "description": "User name",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "formData",
                        "name": "password",
                        "description": "Password",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "responsed json Array of user",
                        "schema": {
                            "$ref": "#/definitions/Artist"
                        }
                    },
                    "400": {
                        "description": "Fail to update record"
                    }
                }
            }
        },
        "/changeStatus": {
            "post": {
                "tags": [
                    "Approval"
                ],
                "summary": "Change status of any record active/in-active",
                "description": "Change status of any record based on record Id",
                "operationId": "changeStatus",
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "in": "formData",
                        "name": "id",
                        "description": "",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "formData",
                        "name": "userName",
                        "description": "",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "formData",
                        "name": "status",
                        "description": "",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "responsed json Array of user",
                        "schema": {
                            "$ref": "#/definitions/Artist"
                        }
                    },
                    "400": {
                        "description": "Fail to update record"
                    }
                }
            }
        },

        "/InsertwishList": {
            "post": {
                "tags": [
                    "Wishlist"
                ],
                "summary": "Insert record into wishlist",
                "description": "",
                "operationId": "InsertwishList",
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "in": "formData",
                        "name": "userId",
                        "description": "",
                        "required": true,
                        "type":"integer"
                        
                    },
                    {
                        "in": "formData",
                        "name": "mediaId",
                        "description": "",
                        "required": true,
                        "type":"integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Record added"
                    },
                    "400": {
                        "description": "Not added"
                    }
                }
            }
        },
        "/GetWishListByUserId": {
            "post": {
                "tags": [
                    "Wishlist"
                ],
                "summary": "Return record from 3 tables based on user Id",
                "description": "Return all record of wishlist, media with artist name(tbluser) based on userId",
                "operationId": "GetWishListByUserId",
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "in": "formData",
                        "name": "userId",
                        "description": "pass user id",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "return json array of record"
                    },
                    "400": {
                        "description": "not found record"
                    }
                }
            }
        },
        "/delWishListByUserIdMediaId": {
            "post": {
                "tags": [
                    "Wishlist"
                ],
                "summary": "Remove record from wishlist",
                "description": "",
                "operationId": "delWishListByUserIdMediaId",
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "in": "formData",
                        "name": "userId",
                        "description": "",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "formData",
                        "name": "mediaId",
                        "description": "",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "record removed"
                    },
                    "400": {
                        "description": "record not removed"
                    }
                }
            }
        },
        "/checkwishlist": {
            "post": {
                "tags": [
                    "Wishlist"
                ],
                "summary": "Check wether record is present in wishlist or not, pass user id, media id",
                "description": "",
                "operationId": "checkwishlist",
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "in": "formData",
                        "name": "userId",
                        "description": "",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "formData",
                        "name": "mediaId",
                        "description": "",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Record present"
                    },
                    "400": {
                        "description": "Record not present"
                    }
                }
            }
        },
        
        "/likeDislike": {
            "post": {
                "tags": [
                    "Liking"
                ],
                "summary": "If user and media exist in Liking then update like value else insert like value",
                "description": "",
                "operationId": "likeDislike",
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "in": "formData",
                        "name": "userId",
                        "description": "",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "formData",
                        "name": "mediaId",
                        "description": "",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "formData",
                        "name": "like",
                        "description": "",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Yes/No"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/fetchLikeDislike": {
            "post": {
                "tags": [
                    "Liking"
                ],
                "summary": "Fetch like dislike based on userId and media id",
                "description": "",
                "operationId": "fetchlikeDislike",
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "in": "formData",
                        "name": "userId",
                        "description": "",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "formData",
                        "name": "mediaId",
                        "description": "",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "0/1  (0-dislike, 1-like)"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },

        "/addComment": {
            "post": {
                "tags": [
                    "Comments"
                ],
                "summary": "If user and media exist in comment then update comment value else insert commnet value",
                "description": "",
                "operationId": "addComments",
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "in": "formData",
                        "name": "userId",
                        "description": "",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "formData",
                        "name": "mediaId",
                        "description": "",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "formData",
                        "name": "comment",
                        "description": "",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Inserted /Not Inserted"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/fetchComment": {
            "post": {
                "tags": [
                    "Comments"
                ],
                "summary": "Fetch comment based on media id",
                "description": "",
                "operationId": "fetchComment",
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "in": "formData",
                        "name": "mediaId",
                        "description": "",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "0/1  (0-dislike, 1-like)"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },

        "/insertBooking": {
            "post": {
                "tags": [
                    "Booking"
                ],
                "summary": "User can book artist for programs",
                "description": "",
                "operationId": "addBooking",
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "in": "formData",
                        "name": "artistId",
                        "description": "",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "formData",
                        "name": "place",
                        "description": "",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "formData",
                        "name": "description",
                        "description": "",                        
                        "type": "string"
                    },
                    {
                        "in": "formData",
                        "name": "date",
                        "description": "yyyy/mm/dd",
                        "required": true,
                        "type": "string",
                        "format": "date" 
                    },
                    {
                        "in": "formData",
                        "name": "time",
                        "description": "hh:mm:ss",
                        "required": true,
                        "type": "string",
                        "format": "time"
                    }                   
                ],
                "responses": {
                    "200": {
                        "description": "Inserted /Not Inserted"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },        
        "/fetchBooking": {
            "post": {
                "tags": [
                    "Booking"
                ],
                "summary": "Return all record from booking, pass artistId",
                "description": "",
                "operationId": "getBooking",
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "in": "formData",
                        "name": "artistId",
                        "description": "",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Return json array of object"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/fetchAllBooking": {
            "post": {
                "tags": [
                    "Booking"
                ],
                "summary": "Return detail of booking and artist ",
                "description": "",
                "operationId": "getAllBooking",
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "responses": {
                    "200": {
                        "description": "Return json array of object"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/deleteBooking":{
            "post": {
                "tags": [
                    "Booking"
                ],
                "summary": "Removing booking by artist",
                "description": "",
                "operationId": "removeBooking",
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "in": "formData",
                        "name": "bookingId",
                        "description": "",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "formData",
                        "name": "artistId",
                        "description": "",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Booking removed/ not removed"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/editBooking": {
            "post": {
                "tags": [
                    "Booking"
                ],
                "summary": "Edit booking details",
                "description": "",
                "operationId": "editBooking",
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "in": "formData",
                        "name": "bookingId",
                        "description": "",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "formData",
                        "name": "artistId",
                        "description": "",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "formData",
                        "name": "place",
                        "description": "",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "formData",
                        "name": "description",
                        "description": "",
                        "type": "string"
                    },
                    {
                        "in": "formData",
                        "name": "date",
                        "description": "yyyy/mm/dd",
                        "required": true,
                        "type": "string",
                        "format": "date"
                    },
                    {
                        "in": "formData",
                        "name": "time",
                        "description": "hh:mm:ss",
                        "required": true,
                        "type": "string",
                        "format": "time"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Updated /Not updated"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        }

    },
    "securityDefinitions": {
        "petstore_auth": {
            "type": "oauth2",
            "authorizationUrl": "http://petstore.swagger.io/oauth/dialog",
            "flow": "implicit",
            "scopes": {
                "write:pets": "modify pets in your account",
                "read:pets": "read your pets"
            }
        },
        "api_key": {
            "type": "apiKey",
            "name": "api_key",
            "in": "header"
        }
    },
    "definitions": {  
        "User": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "type": {
                    "type": "integer",
                    "format": "int(11)"
                },
                "image": {
                    "type": "string",
                    "description": "First upload your image through 'filePost' endpoints and paste here responed image path"                   
                },
                "status": {
                    "type": "integer",
                    "format": "tinyInt"
                    
                },
                "phone_no": {
                    "type": "string",
                    "format": "mobile"                    
                },
                "description": {
                    "type": "string"
                },
                "userName": {
                    "type": "string"
                }
            },
            "xml": {
                "name": "User"
            }
        },
        "Login": {
            "type": "object",
            "in":"formData",
            "properties": {
                "userName": {
                    "type": "string",
                    "required":true
                },
                "password": {
                    "type": "string",
                    "required": true
                }
            },
            "xml": {
                "name": "login"
            }
        },
        "Artist": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "type": {
                    "type": "integer",
                    "format": "int(11)"
                },
                "image": {
                    "type": "string",
                    "description": "First upload your image through 'filePost' endpoints and paste here responed image path"
                },
                "status": {
                    "type": "integer",
                    "format": "tinyInt"
                },
                "phone_no": {
                    "type": "string",
                    "format": "mobile"
                },
                "description": {
                    "type": "string"
                }
            },
            "xml": {
                "name": "Artist"
            }
        },
        "Song":{
            "type": "object",
            "properties": {
                "name":{
                    "type": "string",
                    "required":true
                }, 
                "artistId":{
                    "type": "integer",
                    "required":true
                }, 
                "type":{
                    "type": "integer",
                    "required": true
                }, 
                "filePath":{
                    "type": "string",
                    "required":true
                }, 
                "thumbnailPath":{
                    "type": "string"
                }
            },
            "xml": {
                "name": "Song"
            }
           
        },
        "WishList": {
            "type": "object",
            "properties": {
                "userId": {
                    "type": "integer",
                    "required": true
                },
                "mediaId": {
                    "type": "integer",
                    "required": true
                }
            },
            "xml": {
                "name": "WishList"
            }
        },
        "InsertLiking":{
            "type": "object",
            "properties": {
                "userId": {
                    "type": "integer",
                    "required": true
                },
                "mediaId": {
                    "type": "integer",
                    "required": true
                },
                "like": {
                    "type": "integer",
                    "required": true
                }
            },
            "xml": {
                "name": "Insert Liking"
            }
        },
        "FetchLiking": {
            "type": "object",
            "properties": {
                "userId": {
                    "type": "integer",
                    "required": true
                },
                "mediaId": {
                    "type": "integer",
                    "required": true
                }
            },
            "xml": {
                "name": "Fetch Liking"
            }
        },
        "InsertComment": {
            "type": "object",
            "properties": {
                "userId": {
                    "type": "integer",
                    "required": true
                },
                "mediaId": {
                    "type": "integer",
                    "required": true
                },
                "comment": {
                    "type": "string",
                    "required": true
                }
            },
            "xml": {
                "name": "Add Comment"
            }
        },
        "FetchComment": {
            "type": "object",
            "properties": {
                "userId": {
                    "type": "integer",
                    "required": true
                },
                "mediaId": {
                    "type": "integer",
                    "required": true
                }
            },
            "xml": {
                "name": "Insert Comment"
            }
        },
        "ApiResponse": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer",
                    "format": "int32"
                },
                "type": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                }
            }
        }
    },
    "externalDocs": {
        "description": "Find out more about Swagger",
        "url": "http://swagger.io"
    }
}